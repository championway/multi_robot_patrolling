#!/usr/bin/env python
from rgb_led import *

p = DuckietownLights.sequences['test_all_1']

# 0 (0.5, {'bl': [0, 0, 0], 'top': [0, 0, 0], 'fl': [0, 0, 0], 'fr': [0, 0, 0], 'br': [0, 0, 0]})
# 1 (0.5, {'bl': [1.0, 0, 0], 'top': [1.0, 0, 0], 'fl': [1.0, 0, 0], 'fr': [1.0, 0, 0], 'br': [1.0, 0, 0]})
# 2(0.25, {'bl': [0, 0, 0], 'top': [0, 0, 0], 'fl': [0, 0, 0], 'fr': [0, 0, 0], 'br': [0, 0, 0]})
# 3( 0.25, {'bl': [0, 1.0, 0], 'top': [0, 1.0, 0], 'fl': [0, 1.0, 0], 'fr': [0, 1.0, 0], 'br': [0, 1.0, 0]})
# 4(0.25, {'bl': [0, 0, 0], 'top': [0, 0, 0], 'fl': [0, 0, 0], 'fr': [0, 0, 0], 'br': [0, 0, 0]})
# 5(0.25, {'bl': [0, 1.0, 0], 'top': [0, 1.0, 0], 'fl': [0, 1.0, 0], 'fr': [0, 1.0, 0], 'br': [0, 1.0, 0]})
# 6(0.165, {'bl': [0, 0, 0], 'top': [0, 0, 0], 'fl': [0, 0, 0], 'fr': [0, 0, 0], 'br': [0, 0, 0]})
# 7(0.165, {'bl': [0, 0, 1], 'top': [0, 0, 1], 'fl': [0, 0, 1], 'fr': [0, 0, 1], 'br': [0, 0, 1]})
# 8(0.165, {'bl': [0, 0, 0], 'top': [0, 0, 0], 'fl': [0, 0, 0], 'fr': [0, 0, 0], 'br': [0, 0, 0]})
# 9(0.165, {'bl': [0, 0, 1], 'top': [0, 0, 1], 'fl': [0, 0, 1], 'fr': [0, 0, 1], 'br': [0, 0, 1]})
# 10(0.165, {'bl': [0, 0, 0], 'top': [0, 0, 0], 'fl': [0, 0, 0], 'fr': [0, 0, 0], 'br': [0, 0, 0]})
# 11(0.165, {'bl': [0, 0, 1], 'top': [0, 0, 1], 'fl': [0, 0, 1], 'fr': [0, 0, 1], 'br': [0, 0, 1]})
# 12(5.0, {'bl': [1, 0.4, 0], 'top': [1.0, 1.0, 1.0], 'fl': [1.0, 0, 0], 'fr': [0, 1.0, 0], 'br': [0, 0, 1]})

t0 = 0

def assertit(t, should_be):
	(step, _) = get_current_step(t, t0, p)
	print('t = %s -> step  = %d, should be %d' % (t, step, should_be))
	assert step == should_be, 'Expected t = %s -> i = %d, but %d' % (t, should_be, step)

assertit(0, 0)
assertit(0.1, 0)
assertit(0.6, 1)
assertit(1.1, 2)
assertit(1.4, 3)
assertit(1.6, 4)

assertit(8*10, 0)
assertit(16, 0)
