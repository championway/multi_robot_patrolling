<?xml version="1.0" encoding="utf-8"?>
<launch>
	<!-- start basic args -->
	<arg name="veh" default="david"/>
	<arg name="config" default="baseline" />
	<arg name="param_file_name" default="default" />
	<arg name="apriltags_param_file_name" default="$(arg param_file_name)" />
	<arg name="car_cmd_param_file_name" default="patrolling" />
	<arg name="fsm_file_name" default="patrolling" />
	<arg name="visualization" default="true" />
	<arg name="verbose" default="true" />
	<arg name="statistics" default="false"/>
	<arg name="anti_instagram" default="true"/>
	<arg name="line_detector_param_file_name" default="patrolling"/>
	<arg name="loc" default="-1"/>	
	<arg name="local" default="true"/>
	<!-- end basic args -->
 
<!-- the things that are "on" by default: 
 - camera stack (raw imagery defaults to false)
 - wheels stack
 - joystick stack
 - fsm
-->

<!-- general convention on remappings is that we remap the "subscribers" -->

	<arg name="/camera/local" default="false" />
	<arg name="/apriltags/local" default="true" />
	<!-- false -->
	<arg name="camera" default="false"/>
	<arg name="/camera/raw" default="false"/>
	<arg name="/camera/cam_info" default="false"/>
	<arg name="/camera/raw/rect" default="false"/>
	<arg name="wheels" default="false"/>
	<arg name="apriltags" default="true"/>

	<!-- start switch args -->
	<arg name="robot_name" default="true"/>	
	<arg name="joystick" default="false"/>
	<arg name="fsm" default="true"/>
	<arg name="lane_following" default="true"/>
	<arg name="/lane_following/line_detection" default="true"/>
	<arg name="/lane_following/ground_projection" default="true"/>
	<arg name="/lane_following/lane_filter" default="true"/>
	<arg name="/lane_following/stop_line_filter" default="true"/>
	<arg name="/lane_following/lane_controller" default="true"/>
	<arg name="timer" default="true"/>
	<!-- end switch args -->
	
	<!-- Enable statistics -->
	<param name="enable_statistics" value="$(arg statistics)"/>

	<!-- Publish name -->
	<group if="$(arg robot_name)">
		<include file="$(find robot_name)/launch/robot_name_node.launch">
			<arg name="veh" value="$(arg veh)"/>
			<arg name="local" value="$(arg local)"/>
		</include>	 
	</group>

	<!-- Start Camera -->  
	<group if="$(arg camera)">
		<include  file="$(find pi_camera)/launch/camera_node.launch">
			<arg name="veh" value="$(arg veh)"/>
			<arg name="config" value="$(arg config)"/>
			<arg name="param_file_name" value="$(arg param_file_name)"/>
		</include>
	</group>

    <!-- decoder_node -->
    <group if="$(arg /camera/raw)">
        <remap from="decoder_node/compressed_image" to="camera_node/image/compressed"/>
        <remap from="decoder_node/image/raw" to="camera_node/image/raw"/>
        <include file="$(find pi_camera)/launch/decoder_node.launch">
            <arg name="veh" value="$(arg veh)"/>
            <arg name="local" value="$(arg /camera/local)"/>
            <arg name="config" value="$(arg config)"/>
            <arg name="param_file_name" value="$(arg param_file_name)"/>
        </include>
    </group>
    
    <!-- cam_info_reader_node -->
    <group if="$(arg /camera/cam_info)">
        <remap from="cam_info_reader_node/camera_info" to="camera_node/camera_info"/>
        <remap from="cam_info_reader_node/compressed_image" to="camera_node/image/compressed"/>
        <include file="$(find pi_camera)/launch/cam_info_reader_node.launch"> 
            <arg name="veh" value="$(arg veh)"/>
            <arg name="local" value="$(arg /camera/local)"/>
            <arg name="config" value="$(arg config)"/>
            <arg name="param_file_name" value="$(arg param_file_name)"/>            
        </include>

        <group if="$(arg /camera/raw)">
            <remap from="raw_cam_info_reader_node/camera_info" to="camera_node/raw_camera_info"/>
            <remap from="raw_cam_info_reader_node/compressed_image" to="camera_node/image/raw"/>
            <include file="$(find pi_camera)/launch/cam_info_reader_node.launch">
                <arg name="veh" value="$(arg veh)"/>
                <arg name="local" value="$(arg /camera/local)"/>
                <arg name="config" value="$(arg config)"/>
                <arg name="param_file_name" value="$(arg param_file_name)"/>
                <arg name="node_name" value="raw_cam_info_reader_node" />
                <arg name="image_type" value="raw" />
            </include>

            <!-- Rectification -->
            <group if="$(arg /camera/raw/rect)">
                <remap from="image_raw" to="camera_node/image/raw"/>
                <remap from="camera_info" to="camera_node/raw_camera_info"/>
                <remap from="image_rect_color" to="camera_node/image/rect" />
                <include file="$(find pi_camera)/launch/image_proc_node.launch">
                    <arg name="veh" value="$(arg veh)"/>
                    <arg name="local" value="$(arg /camera/local)"/>
                </include>
            </group>
        </group>
    </group>
	<!-- End Camera -->

	<!-- Start Wheels -->
	<group if="$(arg wheels)">
	    <remap from="inverse_kinematics_node/wheels_cmd" to="wheels_driver_node/wheels_cmd" />
		<remap from="inverse_kinematics_node/car_cmd" to="car_cmd_switch_node/cmd"/>
		<include file="$(find dagu_car)/launch/inverse_kinematics_node.launch">
			<arg name="veh" value="$(arg veh)"/>
			<arg name="local" value="$(arg local)"/>
		</include>

		<!-- Wheel Driver -->
		<include file="$(find dagu_car)/launch/wheels_driver_node.launch">
			<arg name="veh" value="$(arg veh)"/>
			<arg name="local" value="$(arg local)"/>
		</include>
	</group>

	<!-- Start Joystick -->
	<group if="$(arg joystick)">
		<!-- joy -->
		<include file="$(find joy_mapper)/launch/joy_node.launch">
			<arg name="veh" value="$(arg veh)"/>
			<arg name="config" value="$(arg config)"/>
			<arg name="param_file_name" value="$(arg param_file_name)"/>
			<arg name="local" value="$(arg local)"/>
		</include>

		<!-- joy_mapper -->
        <remap from="joy_mapper_node/image" to="camera_node/image/compressed"/>
		<include file="$(find joy_mapper)/launch/joy_mapper_node.launch">
			<arg name="veh" value="$(arg veh)"/>
			<arg name="config" value="$(arg config)"/>
			<arg name="param_file_name" value="$(arg param_file_name)"/>
			<arg name="local" value="$(arg local)"/>
		</include>
	</group>
	<!-- End Joystick -->

	<!-- Start FSM -->
	<group if="$(arg fsm)">
		<!-- FSM -->
		<!-- no remapping for FSM - full topic names specified in params yaml -->
		<include file="$(find fsm)/launch/fsm_patrolling_node.launch">
			<arg name="veh" value="$(arg veh)"/>        
			<arg name="config" value="$(arg config)"/>        
			<arg name="param_file_name" value="$(arg fsm_file_name)"/>        
			<arg name="local" value="$(arg local)"/>
		</include>

		<!-- car_cmd_switch_node -->
		<!-- no remappings for car_cmd_switch - full topic names specified in params yaml -->
		<remap from="car_cmd_switch_node/cmd_lane_following" to="lane_controller_node/lane_control"/> <!-- need either lots more of these or none of these -->
		<include file="$(find dagu_car)/launch/car_cmd_switch_node.launch">
			<arg name="veh" value="$(arg veh)"/>
			<arg name="config" value="$(arg config)"/>
			<arg name="param_file_name" value="$(arg car_cmd_param_file_name)"/>
			<arg name="local" value="$(arg local)"/>
		</include>

		<include file="$(find fsm)/launch/logic_gate_node.launch">
			<arg name="veh" value="$(arg veh)"/>
			<arg name="config" value="$(arg config)"/>
			<arg name="param_file_name" value="$(arg param_file_name)"/>
			<arg name="local" value="$(arg local)"/>
		</include>
	</group>
	<!--End FSM -->

    <!-- Start timer -->
    <group if="$(arg timer)">
        <!-- Timer -->
            <remap from="timer_node/mode" to="fsm_node/mode"/>
    		<remap from="timer_node/in_lane" to="lane_filter_node/in_lane"/>
            <include file="$(find timer)/launch/timer_node.launch">
                <arg name="veh" value="$(arg veh)"/>
                <arg name="local" value="$(arg local)"/>
            </include>
	</group>
	<!-- End Timer -->

	
	<!-- Start Lane Following -->
	<group if="$(arg lane_following)">

		<!-- Line Detector -->
		<group if="$(arg /lane_following/line_detection)">
			<remap from="line_detector_node/image" to="camera_node/image/raw/compressed"/>
			<remap from="line_detector_node/transform" to="anti_instagram_node/transform"/>
			<include file="$(find line_detector)/launch/line_detector_node.launch">
				<arg name="veh" value="$(arg veh)"/>
				<arg name="config" value="$(arg config)"/>
				<!-- NOTE: "line_detector_param_file_name" as special case -->
				<arg name="param_file_name" value="$(arg line_detector_param_file_name)"/>
				<arg name="verbose" value="$(arg verbose)" />
				<arg name="local" value="$(arg local)"/>
			</include>	
		</group>
		
		<!-- Ground projection -->
		<group if="$(arg /lane_following/ground_projection)">
			<include file="$(find ground_projection)/launch/ground_projection.launch">
				<arg name="veh" value="$(arg veh)"/>
				<arg name="config" value="$(arg config)"/>
				<arg name="param_file_name" value="$(arg param_file_name)"/>
				<arg name="local" value="$(arg local)"/>
			</include>
			<group if="$(arg visualization)">
			  <remap from="duckiebot_visualizer/segment_list" to="ground_projection/lineseglist_out"/>
			  <include file="$(find duckiebot_visualizer)/launch/duckiebot_visualizer.launch">
			    <arg name="veh" value="$(arg veh)" />
			  </include>
			</group>
		</group>
	
		<!-- Lane Filter -->
		<group if="$(arg /lane_following/lane_filter)">
			<remap from="lane_filter_node/time_is_up" to="timer_node/time_is_up"/>
			<remap from="lane_filter_node/mode" to="fsm_node/mode" />
			<remap from="lane_filter_node/segment_list" to="ground_projection/lineseglist_out"/>
			<include file="$(find lane_filter)/launch/lane_filter_patrolling_node.launch">
				<arg name="veh" value="$(arg veh)"/>
				<arg name="config" value="$(arg config)"/>
				<arg name="param_file_name" value="$(arg param_file_name)"/>
				<arg name="local" value="$(arg local)"/>
			</include>
		</group>

		<!-- Stop Line Filter -->
		<group if="$(arg /lane_following/stop_line_filter)">
			<remap from="stop_line_filter_node/info" to="apriltags_postprocessing_node/info"/>
			<remap from="stop_line_filter_node/lanewidth" to="lane_filter_node/lanewidth"/>
			<remap from="stop_line_filter_node/lane_pose" to="lane_filter_node/lane_pose"/>
			<remap from="stop_line_filter_node/segment_list" to="ground_projection/lineseglist_out"/>
			<include file="$(find stop_line_filter)/launch/stop_line_filter_patrolling_node.launch">
				<arg name="veh" value="$(arg veh)"/>
				<arg name="config" value="$(arg config)"/>
				<arg name="param_file_name" value="$(arg param_file_name)"/>
				<arg name="local" value="$(arg local)"/>
			</include>
		</group>

		<!-- Lane controller -->
		<group if="$(arg /lane_following/lane_controller)">
			<remap from="lane_controller_node/lane_pose" to="lane_filter_node/lane_pose"/>
			<include file="$(find lane_control)/launch/lane_controller_node.launch">
				<arg name="veh" value="$(arg veh)"/>
				<arg name="config" value="$(arg config)"/>
				<arg name="param_file_name" value="$(arg param_file_name)"/> 
				<arg name="local" value="$(arg local)"/>  
			</include>
		</group>

		<!-- Visualization -->
		<group if="$(arg visualization)">
			<include file="$(find lane_filter)/launch/lane_pose_visualizer_node.launch">
				<arg name="veh" value="$(arg veh)"/>
				<arg name="local" value="$(arg local)"/>		
			</include>
		</group>

	</group>
	<!-- End Lane Control -->

	<!-- Start April Tags -->
	<group if="$(arg apriltags)">
		<!-- AprilTags Detections -->
		<!--remap from="image_rect" to="camera_node/image/raw" /-->
		<remap from="image_rect" to="camera_node/image/raw" />
		<remap from="compressed" to="camera_node/image/compressed" />
		<!--remap from="camera_node/image/camera_info" to="cam_info_reader_node/camera_info" /-->
		<remap from="camera_node/image/camera_info" to="camera_node/camera_info" />
		<!-- remap from="apriltags_detector_node/image_raw" to="camera_node/image/rect"/ -->
		<!-- remap from="apriltags_detector_node/camera_info" to="camera_node/raw_camera_info"/ -->
		<include file="$(find apriltags_ros)/launch/apriltag_detector_node.launch">
			<arg name="veh" value="$(arg veh)"/>
			<arg name="local" value="$(arg /apriltags/local)"/>
			<arg name="config" value="$(arg config)"/>
			<arg name="param_file_name" value="$(arg param_file_name)"/>
		</include>
		<!-- Postprocessing node -->
		<remap from="apriltags_postprocessing_node/apriltags_in" to="tag_detections" />
		<remap from="apriltags_postprocessing_node/mode" to="fsm_node/mode"/>
		<include file="$(find apriltags_ros)/launch/apriltags_postprocessing_node.launch">
			<arg name="veh" value="$(arg veh)"/>
			<arg name="local" value="$(arg /apriltags/local)"/>
			<arg name="config" value="$(arg config)"/>
			<arg name="param_file_name" value="$(arg param_file_name)"/>
		</include>
	</group>
	<!--End Apriltags -->

	<!-- Start anti-instagram -->
	<group if="$(arg anti_instagram)">
	  	<!-- NOT LOADING PARAMS FROM A YAML FILE -->
      	<remap from="anti_instagram_node/uncorrected_image" to="camera_node/image/compressed" />
      	<include file="$(find anti_instagram)/launch/anti_instagram_node.launch">
			<arg name="veh" value="$(arg veh)"/>
      	</include>
	</group>
	<!-- End anti-instagram -->

</launch>